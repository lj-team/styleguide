/* >>> file start: stc/core/components/lightcontrols.css */
/*
Colors

Weight: -3

Colors:
$white: #FFFFFF - white
$black: #000000 - black
$gray-pure-dark: #333333 - gray-pure-dark
$gray-pure-darker: #5B5F61 - gray-pure-darker
$gray-pure-middle: #7D7F7F - gray-pure-middle
$gray-pure-light: #D8D8D8 - gray-pure-light
$gray-pure-smoke: #F9FAFA - gray-pure-smoke
$gray-stone-darker: #838B8E - gray-stone-darker
$gray-stone-darker-2: #8C969B - gray-stone-darker-2
$gray-stone-middle: #BEC3C6 - gray-stone-middle
$gray-stone-middle-2: #D0D1D5 - gray-stone-middle-2
$gray-stone-middle-3: #DfE0E4 - gray-stone-middle-3
$gray-stone-lighter: #E5E6E9 - gray-stone-lighter
$gray-stone-lighter-2: #EDEDF3 - gray-stone-lighter-2
$gray-stone-smoke: #F6F6F9 - gray-stone-smoke
$gray-blue-darker: #7A9199 - gray-blue-darker
$gray-blue-darker-2: #829399 - gray-blue-darker-2
$gray-blue-middle: #A8B3B9 - gray-blue-middle
$gray-blue-middle-2: #ABBBC2 - gray-blue-middle-2
$gray-blue-middle-3: #BDC8CD - gray-blue-middle-3
$gray-blue-lighter: #C7D4DA - gray-blue-lighter
$gray-blue-lighter-2: #C8D4DA - gray-blue-lighter-2
$gray-blue-lighter-3: #D4DCE0 - gray-blue-lighter-3
$gray-blue-light: #DCE1E4 - gray-blue-light
$gray-blue-light-2: #DAE3E6 - gray-blue-light-2
$gray-blue-lightest: #E5EBEE - gray-blue-lightest
$gray-blue-smoke: #F5F7F8 - gray-blue-smoke
$blue-deepest: #003040 - blue-deepest
$blue-deeper: #00394D - blue-deeper
$blue-deep: #004359 - blue-deep
$blue-muted-darker: #007399 - blue-muted-darker
$blue-muted: #3A87AD - blue-muted
$blue-muted-smoke: #D9EDF7 - blue-muted-smoke
$blue-base-dark: #0086B3 - blue-base-dark
$blue-base-darker: #0996C5 - blue-base-darker
$blue-base: #00A3D9 - blue-base
$blue-base-lighter: #00C0FF - blue-base-lighter
$blue-sky: #76DBEF - blue-sky
$red-pure: #FF0000 - red-pure
$red-pure-smoke: #FFEFEF - red-pure-smoke
$red-base-darker: #CB1427 - red-base-darker
$red-base: #EC3434 - red-base
$red-base-lighter: #FF3838 - red-base-lighter
$red-darksalmon: #FF4C44 - red-darksalmon
$yellow-sand: #C09853 - yellow-sand
$yellow-smoke: #FCF8E3 - yellow-smoke
$green-grass: #468847 - green-grass
$green-emerald-darker: #34AD66 - green-emerald-darker
$green-emerald: #39BF71 - green-emerald
$green-emerald-lighter: #4ECA82 - green-emerald-lighter
$green-smoke: #DFF0D8 - green-smoke
$brands-facebook: #3B5A97 - brands-facebook
$brands-twitter: #1CA1F1 - brands-twitter
$brands-vk: #4E76A1 - brands-vk
$brands-ok: #F47421 - brands-ok

Style guide: Core.colors
*/

/*
Lightness steps

midnight
darkest
dark
darker
middle
lighter
light
lightest
smoke
*/

/*
Mixins

Weight: -2

Style guide: Core.mixins
*/

/*
capsText

Gray text with caps. Usually used in table headers & labels for inputs

Style guide: Core.mixins.capsText
*/

/*
visually-hidden

Hides element for users & keep it available for screenreaders

Style guide: Core.mixins.visually-hidden
*/

/*
Light controls

Style guide: Core.light
*/

/*
Light input

Markup:
<input type="text" class="lightinput {{modifier_class}}" placeholder="Empty spaces what are we living for"/>

:disabled - disabled
.lightinput--big - big input

Style guide: Core.light.input
*/

.lightinput {
  height: 28px;
  padding: 0 12px;
  box-sizing: border-box;
  background-color: #FFFFFF;
  border: 1px solid #D4DCE0;
  border-radius: 4px;
  vertical-align: middle;
  font: inherit;
  font-size: 14px;
  line-height: 22px;
  color: #333333;
  transition: border-color .2s;
  }

.lightinput:hover {
  border-color: #BDC8CD;
}

.lightinput:active {
  border-color: #0996C5;
}

.lightinput:focus {
  outline: none;
  border-color: #00A3D9;
}

.lightinput:disabled {
  opacity: .5;
  cursor: not-allowed;
}

/* big */

.lightinput--big {
  height: 36px;
  font-size: 16px;
  }

/*
Light input with clear control

Markup:
<div class="lightclear">
  <input type="text" class="lightinput lightclear__lightinput" placeholder="Abandoned places I guess we know the score"/>
  <button type="button" class="lightclear__control">
    <svg class="lightclear__cross-icon svgicon flaticon flaticon--cross-3" width="16" height="16"><use xlink:href="./kss-assets/flaticon.svg#flaticon--cross-3"/></svg>
  </button>
</div>

Style guide: Core.light.light-clear
*/

.lightclear {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  }

.lightclear__lightinput {
  padding-right: 24px;
  }

.lightclear__control {
  position: absolute;
  top: 1px;
  right: 1px;
  width: 28px;
  bottom: 1px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  border: none;
  border-radius: 0 4px 4px 0;
  background: linear-gradient(to right, rgba(255,255,255,0), #FFFFFF 4px);
  cursor: pointer;
  padding: 0;
  }

.lightclear__control:focus {
  outline: 0;
}

.lightclear__cross-icon {
  fill: #C8D4DA;
  width: 12px;
  height: 12px;
  border-radius: 2px;
  }

.lightclear__control:hover .lightclear__cross-icon {
  fill: #BDC8CD;
}

.lightclear__control:focus .lightclear__cross-icon {
  box-shadow: 0 0 0 2px #00A3D9;
}

/*
Light input with search icon

Markup:
<div class="lightsearch">
  <input type="text" class="lightinput lightsearch__lightinput" placeholder="On and on, does anybody know what we are looking for"/>
  <svg  class="lightsearch__search-icon svgicon flaticon flaticon--search" width="16" height="16"><use xlink:href="./kss-assets/flaticon.svg#flaticon--search"/></svg>
</div>
<!-- search & clear -->
<div class="lightsearch lightclear">
  <input type="text" class="lightinput lightsearch__lightinput lightclear__lightinput" placeholder="On and on, does anybody know what we are looking for"/>
  <svg  class="lightsearch__search-icon svgicon flaticon flaticon--search" width="16" height="16"><use xlink:href="./kss-assets/flaticon.svg#flaticon--search"/></svg>
  <button type="button" class="lightclear__control">
    <svg class="lightclear__cross-icon svgicon flaticon flaticon--cross-3" width="16" height="16"><use xlink:href="./kss-assets/flaticon.svg#flaticon--cross-3"/></svg>
  </button>
</div>

Style guide: Core.light.light-search
*/

.lightsearch {
  display: inline-block;
  position: relative;
  vertical-align: middle;
  }

.lightsearch__lightinput {
  padding-left: 40px;
  }

.lightsearch__search-icon {
  position: absolute;
  top: 50%;
  left: 14px;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%);
  width: 16px;
  height: 16px;
  fill: #C8D4DA;
  }

/*
Light button

Markup:
<a class="lightbutton {{modifier_class}}" href="#">Link</a>
<button class="lightbutton {{modifier_class}}" type="button">Button</button>
<button
  class="lightbutton lightbutton--toggle kss-toggle-class {{modifier_class}}"
  data-toggle-class="lightbutton--toggle-open"
  type="button">
  Toggle button
  <svg class="lightbutton__dropdown-icon svgicon" width="16" height="16"><use xlink:href="./kss-assets/flaticon.svg#flaticon--arrow-dropdown"/></svg>
</button>

:disabled - disabled
.lightbutton--big - big button
.lightbutton--blue - blue button
.lightbutton--green - green button
.lightbutton--red - red button

Style guide: Core.light.button
*/

.lightbutton {
  display: inline-block;
  padding: 5px 16px 7px;
  box-sizing: border-box;
  background: none;
  border: 1px solid #D4DCE0;
  border-radius: 4px;
  vertical-align: middle;
  text-align: center;
  font: inherit;
  font-size: 14px;
  line-height: 1;
  cursor: pointer;
  transition: border-color .2s, background-color .2s, color .2s;
  }

.lightbutton,
  .lightbutton:link,
  .lightbutton:visited {
  color: #333333;
}

.lightbutton:hover {
  border-color: #BDC8CD;
}

.lightbutton:active {
  border-color: #0996C5;
}

.lightbutton:focus {
  outline: none;
  border-color: #00A3D9;
}

.lightbutton:disabled {
  opacity: .5;
  cursor: not-allowed;
}

/* big */

.lightbutton--big {
  padding: 8px 20px 10px;
  font-size: 16px;
  }

/* toggle */

.lightbutton--toggle {
  position: relative;
  padding-right: 30px;
  padding-left: 12px;
  }

.lightbutton__text {
  pointer-events: none;
  }

.lightbutton__dropdown-icon {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 10px;
  margin: auto;
  width: 10px;
  height: 6px;
  fill: #333333;
  transition: -webkit-transform 0.2s;
  transition: transform 0.2s;
  transition: transform 0.2s, -webkit-transform 0.2s;
  }

.lightbutton--toggle-open .lightbutton__dropdown-icon {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
}

.lightbutton--toggle.lightbutton--blue .lightbutton__dropdown-icon,
  .lightbutton--toggle.lightbutton--green .lightbutton__dropdown-icon,
  .lightbutton--toggle.lightbutton--red .lightbutton__dropdown-icon {
  fill: white
}

/* blue */

.lightbutton--blue {
  background-color: #00A3D9;
  border-color: #00A3D9;
  }

.lightbutton--blue,
  .lightbutton--blue:link,
  .lightbutton--blue:visited {
  color: #FFFFFF;
}

.lightbutton--blue:hover,
  .lightbutton--blue:focus {
  border-color: #00C0FF;
  background-color: #00C0FF;
}

.lightbutton--blue:active {
  border-color: #0996C5;
  background-color: #0996C5;
}

/* green */

.lightbutton--green {
  background-color: #39BF71;
  border-color: #39BF71;
  }

.lightbutton--green,
  .lightbutton--green:link,
  .lightbutton--green:visited {
  color: #FFFFFF;
}

.lightbutton--green:hover,
  .lightbutton--green:focus {
  border-color: #4ECA82;
  background-color: #4ECA82;
}

.lightbutton--green:active {
  border-color: #34AD66;
  background-color: #34AD66;
}

/* red */

.lightbutton--red {
  background-color: #EC3434;
  border-color: #EC3434;
  }

.lightbutton--red,
  .lightbutton--red:link,
  .lightbutton--red:visited {
  color: #FFFFFF;
}

.lightbutton--red:hover,
  .lightbutton--red:focus {
  border-color: #FF3838;
  background-color: #FF3838;
}

.lightbutton--red:active {
  border-color: #CB1427;
  background-color: #CB1427;
}

/*
Light input + light button

Markup:
<ul class="kss-demo-list ">
  <li>
    <input type="text" class="lightinput" placeholder="Empty spaces what are we living for"/>
    <select class="lightselect">
      <option>Across darkened skies</option>
      <option>I travelled without a light</option>
      <option>I sank in the well of my mind</option>
      <option>Too deep, never to be found</option>
    </select>
    <button class="lightbutton lightbutton--blue" type="button">Button</button>
  </li>
  <li>
    <input type="text" class="lightinput lightinput--big" placeholder="Empty spaces what are we living for"/>
    <select class="lightselect lightselect--big">
      <option>Across darkened skies</option>
      <option>I travelled without a light</option>
      <option>I sank in the well of my mind</option>
      <option>Too deep, never to be found</option>
    </select>
    <button class="lightbutton lightbutton--big lightbutton--blue" type="button">Button</button>
  </li>
</ul>

Style guide: Core.light.input-button
*/

/*
Light checkbox

Markup:
<label class="lightcheckbox {{modifier_class}}">
  <input class="lightcheckbox__input" type="checkbox" value="keyword.name">
  <span class="lightcheckbox__text">Hold my breath and wait</span>
</label>
<label class="lightcheckbox {{modifier_class}}">
  <input class="lightcheckbox__input" disabled type="checkbox" value="keyword.name">
  <span class="lightcheckbox__text">Hold my breath and wait</span>
</label>

.lightcheckbox--big - big checkbox

Style guide: Core.light.checkbox
*/

.lightcheckbox {
    display: inline-block;
    position: relative;
    box-sizing: border-box;
    font-size: 14px;
    line-height: 20px;
    font-weight: 400;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    cursor: pointer;
    }

.lightcheckbox--big {
  font-size: 16px;
  }

.lightcheckbox + .lightcheckbox {
  margin-left: 16px;
  }

.lightcheckbox__input {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
  }

.lightcheckbox__text {
  position: relative;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding-left: 0;
  color: #333333;
}

.lightcheckbox__text::before,
  .lightcheckbox__text::after {
  content: "";
  display: block;
  position: relative;
  top: 2px;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
  width: 16px;
  height: 16px;
  border-radius: 2px;
  transition: all .15s;
  pointer-events: none;
}

.lightcheckbox--big .lightcheckbox__text::before,
    .lightcheckbox--big .lightcheckbox__text::after {
  width: 18px;
  height: 18px;
}

.lightcheckbox__text::before {
  margin-right: 8px;
  box-sizing: border-box;
  background-color: #FFFFFF;
  border: 1px solid #D4DCE0;
  box-shadow: 0 0 0 2px transparent;
  cursor: pointer;
  transition: all .15s;
  }

.lightcheckbox__text::after {
  position: absolute;
  left: 0;
  margin-top: -7px;
  opacity: 0;
  background: 50% no-repeat;
  background-size: 10px;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10'%3E%3Cpath d='M1 6l3 3 5-8' stroke-width='2' stroke='%23FFF' fill='none' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
  }

.lightcheckbox--big .lightcheckbox__text::after {
  background-size: 12px;
}

.lightcheckbox__text:hover::before, .lightcheckbox__text:active::before {
  border-color: #BDC8CD;
}

.lightcheckbox__input:checked + .lightcheckbox__text::before {
  background-color: #00A3D9;
  border-color: transparent !important;
}

.lightcheckbox__input:checked + .lightcheckbox__text::after {
  margin-top: 0;
  opacity: 1;
}

.lightcheckbox__input:focus + .lightcheckbox__text::before {
  border-color: transparent;
  box-shadow: 0 0 0 2px #00A3D9;
}

.lightcheckbox__input:focus + .lightcheckbox__text:hover::before {
  box-shadow: 0 0 0 2px #00C0FF;
}

.lightcheckbox__input:checked:focus + .lightcheckbox__text::before {
  border-color: transparent;
  box-shadow: 0 0 0 2px #0086B3;
}

.lightcheckbox__input:checked:focus + .lightcheckbox__text:hover::before {
  background-color: #00C0FF;
  box-shadow: 0 0 0 2px #00A3D9;
}

.lightcheckbox__input:disabled + .lightcheckbox__text {
  opacity: .5;
  cursor: not-allowed;
  }

/*
Light radio

Markup:
<label class="lightradio {{modifier_class}}">
  <input class="lightradio__input" type="radio" name="lightradio" value="lightradio-1">
  <span class="lightradio__text">Open your eyes, here the dreams burn</span>
</label>
<label class="lightradio {{modifier_class}}">
  <input class="lightradio__input" disabled type="radio" name="lightradio" value="lightradio-2">
  <span class="lightradio__text">And light up the skies</span>
</label>

.lightradio--big - big radio

Style guide: Core.light.radio
*/

.lightradio {
    display: inline-block;
    position: relative;
    box-sizing: border-box;
    font-size: 14px;
    line-height: 20px;
    font-weight: 400;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    cursor: pointer;
    }

.lightradio--big {
  font-size: 16px;
  }

.lightradio + .lightradio {
  margin-left: 16px;
  }

.lightradio__input {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
  }

.lightradio__text {
  position: relative;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  padding-left: 0;
  color: #333333;
}

.lightradio__text::before,
  .lightradio__text::after {
  content: "";
  display: block;
  position: relative;
  top: 2px;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0;
  border-radius: 50%;
  transition: all .15s;
  pointer-events: none;
}

.lightradio__text::before {
  width: 16px;
  height: 16px;
  margin-right: 8px;
  box-sizing: border-box;
  background-color: #FFFFFF;
  border: 1px solid #D4DCE0;
  box-shadow: 0 0 0 2px transparent;
  cursor: pointer;
  transition: all .15s;
  }

.lightradio--big .lightradio__text::before {
  width: 20px;
  height: 20px;
}

.lightradio__text::after {
  position: absolute;
  left: 0;
  margin: 5px;
  opacity: 0;
  width: 6px;
  height: 6px;
  background: #FFF;
  }

.lightradio--big .lightradio__text::after {
  width: 8px;
  height: 8px;
  margin: 6px;
}

.lightradio__text:hover::before, .lightradio__text:active::before {
  border-color: #BDC8CD;
}

.lightradio__input:checked + .lightradio__text::before {
  background-color: #00A3D9;
  border-color: transparent !important;
}

.lightradio__input:checked + .lightradio__text::after {
  opacity: 1;
}

.lightradio__input:checked + .lightradio__text:hover::before, .lightradio__input:checked + .lightradio__text:active::before {
  background-color: #00C0FF;
}

.lightradio__input:focus + .lightradio__text::before {
  border-color: transparent;
  box-shadow: 0 0 0 2px #00A3D9;
}

.lightradio__input:focus + .lightradio__text:hover::before {
  box-shadow: 0 0 0 2px #00C0FF;
}

.lightradio__input:checked:focus + .lightradio__text::before {
  border-color: transparent;
  box-shadow: 0 0 0 2px #0086B3;
}

.lightradio__input:checked:focus + .lightradio__text:hover::before {
  background-color: #00C0FF;
  box-shadow: 0 0 0 2px #00A3D9;
}

.lightradio__input:disabled + .lightradio__text {
  opacity: .5;
  cursor: not-allowed;
  }

/*
Light select

Markup:
<select class="lightselect {{modifier_class}}">
  <option>Across darkened skies</option>
  <option>I travelled without a light</option>
  <option>I sank in the well of my mind</option>
  <option>Too deep, never to be found</option>
</select>

:disabled - disabled
.lightselect--big - big select

Style guide: Core.light.select
*/

.lightselect {
  height: 28px;
  vertical-align: middle;
  font-size: 14px;
  }

.lightselect:disabled {
  opacity: .5;
  cursor: not-allowed;
  }

.lightselect--big {
  height: 36px;
  font-size: 16px;
  }

/* <<< file end: stc/core/components/lightcontrols.css */

/*# sourceMappingURL=lightcontrols.css.map */
